pipeline {
    agent any

    environment {
        DIR = 'CA2/Part2/react-and-spring-data-rest-basic'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out repo...'
                git branch: 'main', url: 'https://github.com/1231820AnaLino/devops-23-24-PSM-1231820.git'
            }
        }

        stage('Assemble') {
            steps {
                echo 'Assembling project...'
                dir(env.DIR) {
                    sh 'chmod +x gradlew'
                    sh './gradlew assemble'
                }
            }
        }

        stage('Test') {
            steps {
                echo 'Testing project...'
                dir(env.DIR) {
                    sh './gradlew test'
                }
            }
        }

        stage('Javadocs') {
            steps {
                echo 'Generating Javadocs...'
                dir(env.DIR) {
                    sh './gradlew javadoc'
                }
                publishHTML(target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: 'CA2/Part2/react-and-spring-data-rest-basic/build/docs/javadoc',
                    reportFiles: 'index.html',
                    reportName: 'Javadoc'
                ])
            }
        }

        stage('Archive') {
            steps {
                echo 'Archiving project...'
                dir(env.DIR) {
                    archiveArtifacts artifacts: 'build/libs/*.jar', fingerprint: true
                }
            }
        }

        stage('Create Dockerfile') {
            steps {
                echo 'Creating Dockerfile...'
                dir(env.DIR) {
                    script {
                        def dockerfileContent = """
                        FROM gradle:jdk17
                        WORKDIR /app
                        COPY build/libs/*.jar app.jar
                        EXPOSE 8080
                        ENTRYPOINT ["java", "-jar", "app.jar"]
                        """
                        writeFile file: 'DockerfileCa2P2', text: dockerfileContent
                    }
                }
            }
        }

           stage('Publish Docker Image') {
                    steps {
                        echo 'Publishing Docker image...'
                        dir(env.DIR) {
                            script {
                                def dockerImage = docker.build("1231820/devops-ca5:${env.BUILD_ID}", "-f DockerfileCa2P2 .")
                                docker.withRegistry('https://index.docker.io/v1/', 'dockerhub_id') {
                                dockerImage.push()
                                }
                            }
                        }
                    }
           }
        }
    }
